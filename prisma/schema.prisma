generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id   Int       @id @default(autoincrement())
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  user_name String?   @db.VarChar(100)
  phone     String?   @db.VarChar(20)
  role      String?   @default("customer") @db.VarChar(20)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
}

model Notification {
  id         Int      @id @default(autoincrement())
  user_id    Int
  title      String
  message    String
  type       String?
  is_read    Boolean  @default(false)
  email_sent Boolean  @default(false)
  created_at DateTime @default(now())
}

model event_services {
  event_id   Int
  service_id Int
  events     events   @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  services   services @relation(fields: [service_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([event_id, service_id])
}

model events {
  id               Int                @id @default(autoincrement())
  user_id          Int?
  title            String             @db.VarChar(255)
  type             String?            @db.VarChar(50)
  date             DateTime           @db.Timestamp(6)
  location         String?            @db.VarChar(255)
  status           String?            @default("pending") @db.VarChar(20)
  created_at       DateTime?          @default(now()) @db.Timestamp(6)
  event_services   event_services[]
  payments         payments[]
  support_requests support_requests[]
}

model faqs {
  id         Int       @id @default(autoincrement())
  question   String
  answer     String
  created_at DateTime? @default(now()) @db.Timestamp(6)
}

model logs {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  action     String?   @db.VarChar(100)
  details    Json?
  created_at DateTime? @default(now()) @db.Timestamp(6)
}

model notifications {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  title      String    @db.VarChar(255)
  message    String
  type       String?   @db.VarChar(50)
  is_read    Boolean?  @default(false)
  email_sent Boolean?  @default(false)
  created_at DateTime? @default(now()) @db.Timestamp(6)
}

model payments {
  id             Int       @id @default(autoincrement())
  event_id       Int?
  amount         Decimal   @db.Decimal(10, 2)
  status         String?   @default("pending") @db.VarChar(20)
  payment_method String?   @db.VarChar(50)
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  events         events?   @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model services {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(100)
  description    String?
  price          Decimal          @db.Decimal(10, 2)
  created_at     DateTime?        @default(now()) @db.Timestamp(6)
  event_services event_services[]
}

model support_requests {
  id          Int       @id @default(autoincrement())
  user_id     Int?
  event_id    Int?
  subject     String    @db.VarChar(255)
  description String
  status      String?   @default("pending") @db.VarChar(20)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  resolved_at DateTime? @db.Timestamp(6)
  events      events?   @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  user_id    Int       @id @default(autoincrement())
  email      String    @unique @db.VarChar(255)
  password   String    @db.VarChar(255)
  user_name  String?   @db.VarChar(100)
  phone      String?   @db.VarChar(20)
  role       String?   @default("customer") @db.VarChar(20)
  created_at DateTime? @default(now()) @db.Timestamp(6)
}
